{"ast":null,"code":"var _jsxFileName = \"C:\\\\koodi\\\\react\\\\unicafe\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Statistics = props => {\n  if (props.all === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n      name: \"good\",\n      value: props.good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n      name: \"neutral\",\n      value: props.neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n      name: \"bad\",\n      value: props.bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n      name: \"all\",\n      value: props.all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n      name: \"average\",\n      value: props.good / props.average\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n      name: \"positive\",\n      value: props.good / props.all * 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Statistics;\n\nconst StatisticsLine = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [props.text, \" \", props.value]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 25,\n  columnNumber: 33\n}, this);\n\n_c2 = StatisticsLine;\n\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.handleClick,\n  children: props.text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 3\n}, this);\n\n_c3 = Button;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [all, setAll] = useState(0);\n  const [average, setAverage] = useState(0);\n\n  const handleGoodClick = () => {\n    setGood(good + 1);\n    setAll(all + 1);\n    setAverage(average + 1);\n  };\n\n  const handleNeutralClick = () => {\n    setNeutral(neutral + 1);\n    setAll(all + 1);\n    setAverage(average + 0);\n  };\n\n  const handleBadClick = () => {\n    setBad(bad + 1);\n    setAll(all + 1);\n    setAverage(average - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleGoodClick,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleNeutralClick,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleBadClick,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad,\n      all: all,\n      average: average\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"pcWeRR0GXoQlQKplCeAG0lEmO+g=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"StatisticsLine\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["C:/koodi/react/unicafe/src/App.js"],"names":["React","useState","Statistics","props","all","good","neutral","bad","average","StatisticsLine","text","value","Button","handleClick","App","setGood","setNeutral","setBad","setAll","setAverage","handleGoodClick","handleNeutralClick","handleBadClick"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nconst Statistics = (props) => {\n  if (props.all === 0) {\n    return (\n      <div>\n       <h3>No feedback given</h3>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1>Statistics</h1>\n      <StatisticsLine name='good' value={props.good}/>\n      <StatisticsLine name='neutral' value={props.neutral}/>\n      <StatisticsLine name='bad' value={props.bad}/>\n      <StatisticsLine name='all' value={props.all}/>\n      <StatisticsLine name='average' value={props.good/props.average}/>\n      <StatisticsLine name='positive' value={(props.good/props.all)*100}/>\n    </div>\n  )\n}\n\nconst StatisticsLine = props => <div>{props.text} {props.value}</div>\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>\n    {props.text}\n  </button>\n)\n\nconst App = () => {\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [all, setAll] = useState(0)\n  const [average, setAverage] = useState(0)\n\n  const handleGoodClick = () => {\n    setGood(good + 1)\n    setAll(all + 1)\n    setAverage(average + 1)\n  }\n\n  const handleNeutralClick = () => {\n    setNeutral(neutral + 1)\n    setAll(all + 1)\n    setAverage(average + 0)\n  }\n\n  const handleBadClick = () => {\n    setBad(bad + 1)\n    setAll(all + 1)\n    setAverage(average - 1)\n  }\n\n  return (\n    <div>\n      <h1>Give feedback</h1>\n      <Button\n        handleClick={handleGoodClick}\n        text='good'\n      />\n      <Button\n        handleClick={handleNeutralClick}\n        text='neutral'\n      />     \n      <Button\n        handleClick={handleBadClick}\n        text='bad'\n      /> \n      <Statistics good={good} neutral={neutral} bad={bad} all={all} average={average}/>          \n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}