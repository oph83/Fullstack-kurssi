{"ast":null,"code":"var _jsxFileName = \"C:\\\\koodi\\\\react\\\\unicafe\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Statistics = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", props.good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"neutral \", props.neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"bad \", props.bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"all \", props.all]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"average \", props.average / props.all]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"positive \", props.good / props.all * 100, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Statistics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [all, setAll] = useState(0);\n  const [average, setAverage] = useState(0);\n\n  const Button = _ref => {\n    let {\n      handleClick,\n      text\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this);\n  };\n\n  const handleGoodClick = () => {\n    setGood(good + 1);\n    setAll(all + 1);\n    setAverage(average + 1);\n  };\n\n  const handleNeutralClick = () => {\n    setNeutral(neutral + 1);\n    setAll(all + 1);\n    setAverage(average + 0);\n  };\n\n  const handleBadClick = () => {\n    setBad(bad + 1);\n    setAll(all + 1);\n    setAverage(average - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleGoodClick,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleNeutralClick,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleBadClick,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad,\n      all: all,\n      average: average\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"pcWeRR0GXoQlQKplCeAG0lEmO+g=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/koodi/react/unicafe/src/App.js"],"names":["React","useState","Statistics","props","good","neutral","bad","all","average","App","setGood","setNeutral","setBad","setAll","setAverage","Button","handleClick","text","handleGoodClick","handleNeutralClick","handleBadClick"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nconst Statistics = (props) => {\n  return (\n    <div>\n      <h1>statistics</h1>\n      <p>good {props.good}</p>\n      <p>neutral {props.neutral}</p>\n      <p>bad {props.bad}</p>\n      <p>all {props.all}</p>\n      <p>average {props.average/props.all}</p>\n      <p>positive {(props.good/props.all)*100}%</p>\n    </div>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [all, setAll] = useState(0)\n  const [average, setAverage] = useState(0)\n\n  const Button = ({ handleClick, text }) => (\n    <button onClick={handleClick}>\n      {text}\n    </button>\n  )\n\n  const handleGoodClick = () => {\n    setGood(good + 1)\n    setAll(all + 1)\n    setAverage(average + 1)\n  }\n\n  const handleNeutralClick = () => {\n    setNeutral(neutral + 1)\n    setAll(all + 1)\n    setAverage(average + 0)\n  }\n\n  const handleBadClick = () => {\n    setBad(bad + 1)\n    setAll(all + 1)\n    setAverage(average - 1)\n  }\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button\n        handleClick={handleGoodClick}\n        text='good'\n      />\n      <Button\n        handleClick={handleNeutralClick}\n        text='neutral'\n      />     \n      <Button\n        handleClick={handleBadClick}\n        text='bad'\n      /> \n      <Statistics good={good} neutral={neutral} bad={bad} all={all} average={average}/>          \n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}